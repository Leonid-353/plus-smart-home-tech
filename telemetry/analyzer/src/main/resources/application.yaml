grpc:
  client:
    hub-router:
      address: static://localhost:59090
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

spring:
  application:
    name: analyzer
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/telemetry
    username: dbuser
    password: 12345
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

analyzer:
  kafka:
    consumer-snapshots:
      properties:
        bootstrap.servers: localhost:9092
        group.id: analyzer-snapshots-group
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.kafka.deserializer.SensorsSnapshotDeserializer
        auto.offset.reset: earliest
        enable.auto.commit: false
      topics:
        snapshots-events: telemetry.snapshots.v1
    consumer-hubs:
      properties:
        bootstrap.servers: localhost:9092
        group.id: analyzer-hubs-group
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.kafka.deserializer.HubEventDeserializer
        auto.offset.reset: earliest
        enable.auto.commit: false
      topics:
        hubs-events: telemetry.hubs.v1

logging:
  level:
    ru.yandex.practicum.telemetry: TRACE
    org:
      springframework: ERROR
      apache.kafka: WARN